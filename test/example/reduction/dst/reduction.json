[
    {
        "__class__":"HdlModuleDef",
        "position":[
            2,
            1,
            30,
            9
        ],
        "name":{
            "__class__":"str",
            "val":null
        },
        "dec":{
            "__class__":"HdlModuleDec",
            "doc":{
                "__class__":"str",
                "val":" DUT: Reduction Operations Module\n"
            },
            "position":[
                2,
                1,
                30,
                9
            ],
            "name":{
                "__class__":"str",
                "val":"reduction_dut"
            },
            "objs":[],
            "declaration_only":false,
            "params":[],
            "ports":[
                {
                    "__class__":"HdlIdDef",
                    "position":[
                        3,
                        5,
                        3,
                        25
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"in_vector"
                    },
                    "type":{
                        "__class__":"HdlOp",
                        "ops":[
                            "wire",
                            {
                                "__class__":"HdlOp",
                                "ops":[
                                    {
                                        "__class__":"HdlValueInt",
                                        "val":"7",
                                        "base":10
                                    },
                                    {
                                        "__class__":"HdlValueInt",
                                        "val":"0",
                                        "base":10
                                    }
                                ],
                                "fn":"DOWNTO"
                            },
                            {
                                "__class__":"str",
                                "val":null
                            }
                        ],
                        "fn":"PARAMETRIZATION"
                    },
                    "direction":"IN"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" 8-bit input vector\n"
                    },
                    "position":[
                        4,
                        5,
                        4,
                        18
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_and"
                    },
                    "type":"wire",
                    "direction":"OUT"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" AND reduction output\n"
                    },
                    "position":[
                        5,
                        5,
                        5,
                        17
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_or"
                    },
                    "type":"wire",
                    "direction":"OUT"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" OR reduction output\n"
                    },
                    "position":[
                        6,
                        5,
                        6,
                        19
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_nand"
                    },
                    "type":"wire",
                    "direction":"OUT"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" NAND reduction output\n"
                    },
                    "position":[
                        7,
                        5,
                        7,
                        18
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_nor"
                    },
                    "type":"wire",
                    "direction":"OUT"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" NOR reduction output\n"
                    },
                    "position":[
                        8,
                        5,
                        8,
                        18
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_xor"
                    },
                    "type":"wire",
                    "direction":"OUT"
                },
                {
                    "__class__":"HdlIdDef",
                    "doc":{
                        "__class__":"str",
                        "val":" XOR reduction output\n"
                    },
                    "position":[
                        9,
                        5,
                        9,
                        19
                    ],
                    "name":{
                        "__class__":"str",
                        "val":"out_nxor"
                    },
                    "type":"wire",
                    "direction":"OUT"
                }
            ]
        },
        "module_name":"reduction_dut",
        "objs":[
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" AND reduction: All bits must be 1 for the output to be 1\n"
                },
                "position":[
                    13,
                    12,
                    13,
                    33
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"AND_UNARY"
                },
                "dst":"out_and",
                "is_blocking":false
            },
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" OR reduction: At least one bit must be 1 for the output to be 1\n"
                },
                "position":[
                    16,
                    12,
                    16,
                    30
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"OR_UNARY"
                },
                "dst":"out_or",
                "is_blocking":false
            },
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" NAND reduction: At least one bit must be 0 for the output to be 1\n"
                },
                "position":[
                    19,
                    12,
                    19,
                    35
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"NAND_UNARY"
                },
                "dst":"out_nand",
                "is_blocking":false
            },
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" NOR reduction: All bits must be 0 for the output to be 1\n"
                },
                "position":[
                    22,
                    12,
                    22,
                    34
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"NOR_UNARY"
                },
                "dst":"out_nor",
                "is_blocking":false
            },
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" XOR reduction: the counts of one bit must be odd for the output to be 1\n"
                },
                "position":[
                    25,
                    12,
                    25,
                    33
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"XOR_UNARY"
                },
                "dst":"out_xor",
                "is_blocking":false
            },
            {
                "__class__":"HdlStmAssign",
                "doc":{
                    "__class__":"str",
                    "val":" NXOR reduction: the counts of one bit must be even for the output to be 1\n"
                },
                "position":[
                    28,
                    12,
                    28,
                    35
                ],
                "labels":[],
                "src":{
                    "__class__":"HdlOp",
                    "ops":[
                        "in_vector"
                    ],
                    "fn":"XNOR_UNARY"
                },
                "dst":"out_nxor",
                "is_blocking":false
            }
        ]
    }
]